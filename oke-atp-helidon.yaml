#
# Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
kind: Secret
apiVersion: v1
metadata:
  name: customized-db-cred
data:
  user_name: SEFORFNPTg== # echo -n 'HANDSON' | base64
  password: V2VsY29tZTEyMzQ1 # echo -n 'Welcome12345' | base64
---
kind: Service
apiVersion: v1
metadata:
  name: oke-atp-helidon
  labels:
    app: oke-atp-helidon
spec:
  type: NodePort
  selector:
    app: oke-atp-helidon
  ports:
  - port: 8080
    targetPort: 8080
    name: http
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: oke-atp-helidon
spec:
  selector:
    matchLabels:
      app: oke-atp-helidon
  replicas: 1
  template:
    metadata:
      labels:
        app: oke-atp-helidon
        version: v1
    spec:
      # The credential files in the secret are base64 encoded twice and hence they need to be decoded for the programs to use them.
      # This decode-creds initContainer takes care of decoding the files and writing them to a shared volume from which db-app container
      # can read them and use it for connecting to ATP.
      initContainers:
      - name: decode-creds
        command:
        - bash
        - -c
        - "for i in `ls -1 /tmp/creds | grep -v user_name`; do cat /tmp/creds/$i  | base64 --decode > /creds/$i; done; ls -l /creds/*;"
        image: oraclelinux:7.4
        volumeMounts:
        - name: creds-raw
          mountPath: /tmp/creds
          readOnly: false
        - name: creds
          mountPath: /creds        
      containers:      
      - name: oke-atp-helidon
        image: icn.ocir.io/sehubjapacprod/workshop/oke-atp-helidon:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: javax_sql_DataSource_workshopDataSource_dataSource_user
          valueFrom:
            secretKeyRef:
              name: customized-db-cred
              key: user_name
        - name: javax_sql_DataSource_workshopDataSource_dataSource_password
          valueFrom:
            secretKeyRef:
              name: customized-db-cred
              key: password
        - name: WALLET_PWD
          valueFrom:
            secretKeyRef:
              name: atp-user-cred
              key: walletPassword
        volumeMounts:
        - name: creds
          mountPath: /db-demo/creds     
      imagePullSecrets:
      - name: workshop-ocirsecret
      volumes:
      # Volume for mouting the credentials file from Secret created by binding request.
      - name: creds-raw
        secret:
          secretName: atp-demo-binding
      # Shared Volume in which initContainer will save the decoded credential files and the db-app container reads.
      - name: creds
        emptyDir: {}
---